class Solution {
        public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> lists = new ArrayList<>();
        //排序
        Arrays.sort(nums);
        //双指针
        int len = nums.length;
        int index=0;
        while(index<len-2 && nums[index]<=0){ //遍历每个元素，先判断下标（len-2保证有三个元素），防止越界
            int low=index+1,high=len-1;//防止重复，不能选index之前的元素
            while(low<high){
                int sum = nums[low]+nums[high]+nums[index];
                if(sum==0){//sum为0，添加到结果
                    ArrayList<Integer> res = new ArrayList<>();
                    res.add(nums[low]);
                    res.add(nums[index]);
                    res.add(nums[high]);
                    lists.add(res);
                    int tmpLow = nums[low], tmpHigh=nums[high];
                    while(low<len && nums[low]==tmpLow)//先防止越界，再防止重复，跳过相同的元素
                        low++;
                    while(high>0 && nums[high]==tmpHigh)//防止重复，跳过相同的元素
                        high--;
                }
                else if(sum>0)
                    high--;
                else 
                    low++;
            }
            int tmp = nums[index];
            while(index<len && tmp==nums[index]){//先防止越界，再防止重复，跳过相同的元素
                index++;
            }
        }
        return lists;
    }
}
