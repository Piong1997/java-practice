dp(i,j)=min(dp(i−1,j),dp(i−1,j−1),dp(i,j−1))+1
class Solution {
    public int maximalSquare(char[][] matrix) {
        int height = matrix.length, width=matrix[0].length, max=0;
        int[][] res = new int[height][width];
        for(int i=0;i<height;i++){
            for(int j=0;j<width;j++){
                res[i][j] = matrix[i][j]-'0';
                if(i>0 && j>0 && res[i][j]>0 && res[i-1][j-1]>0 && res[i-1][j]>0 && res[i][j-1]>0){
                    int min = Math.min(res[i-1][j-1],res[i-1][j]);
                    min = Math.min(min,res[i][j-1]);
                    //System.out.println(min);
                    res[i][j] = Math.max(res[i][j],min+1);
                }
                max = Math.max(max,res[i][j]);
            }
        }
        return max*max;
    }
}
