/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(left==right) return head;
        ListNode p=head,r=p.next,ipre=head,tail=head,tailNext=head;
        ListNode headPre = new ListNode();
        headPre.next = head;
        if(left==1) ipre=headPre;
        for(int i=0; i<right-1;i++){
            if(i==left-2) ipre=p;
            if(i>=left-1){
                if(i==right-2) tail=r;
                tailNext=r.next;
                r.next=p;
                p=r;
                r=tailNext;
                // if(tailNext==null) break;
            }
            else{
                p=p.next;
                r=r.next;
            }
            
        }
        ListNode i = ipre.next;
        ipre.next=tail;
        i.next = tailNext;
        return headPre.next;
    }
}
