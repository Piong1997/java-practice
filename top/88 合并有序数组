class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        if(n==0) return;
        else if(m==0) {
            for(int ii=0;ii<n;ii++){
                nums1[ii]=nums2[ii];
            }
            return;
        }
        int[] res = new int[m+n];
        int i=0,p=0,r=0,flag=0;
        for(i=0;i<m+n;i++){
            if(nums1[p]<=nums2[r]){
                res[i] = nums1[p];
                p++;
                if(p==m){
                    i++;
                    break;
                }
            }
            else{
                res[i] = nums2[r];
                r++;
                if(r==n){
                    flag=1;
                    i++;
                    break;
                }
            }
        }
        int j = flag==1?p:r;
        int t = flag==1?m:n;
        int[] tmp = flag==1?nums1:nums2;
        for(j=j;j<t;j++){
            res[i] = tmp[j];
            i++;
        }
        for(int ii=0;ii<m+n;ii++){
            nums1[ii]=res[ii];
        }
    }
}

//answer
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int p1 = 0, p2 = 0;
        int[] sorted = new int[m + n];
        int cur;
        while (p1 < m || p2 < n) {
            if (p1 == m) {
                cur = nums2[p2++];
            } else if (p2 == n) {
                cur = nums1[p1++];
            } else if (nums1[p1] < nums2[p2]) {
                cur = nums1[p1++];
            } else {
                cur = nums2[p2++];
            }
            sorted[p1 + p2 - 1] = cur;
        }
        for (int i = 0; i != m + n; ++i) {
            nums1[i] = sorted[i];
        }
    }
    class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int p1 = m - 1, p2 = n - 1;
        int tail = m + n - 1;
        int cur;
        while (p1 >= 0 || p2 >= 0) {
            if (p1 == -1) {
                cur = nums2[p2--];
            } else if (p2 == -1) {
                cur = nums1[p1--];
            } else if (nums1[p1] > nums2[p2]) {
                cur = nums1[p1--];
            } else {
                cur = nums2[p2--];
            }
            nums1[tail--] = cur;
        }
    }
}


