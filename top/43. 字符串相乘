//暴力模拟竖式
class Solution {
    public String multiply(String num1, String num2) {
        if(num1.equals("0")||num2.equals("0")) return "0";
        int len1 = num1.length(),len2 = num2.length();
        int carry = 0;
        List<String> ls = new ArrayList();
        for(int i=len2-1;i>=0;i--){
            int n2 = num2.charAt(i)-'0';
            StringBuilder sb = new StringBuilder();
            for(int j=len1-1;j>=0||carry>0;j--){
                int n1 = j>=0?num1.charAt(j)-'0':0;
                int sum = n1*n2+carry;
                carry = sum/10;
                sb.append(sum%10);
            }
            sb.reverse();
            for(int count = len2-1-i;count>0;count--)
                sb.append(0);
            ls.add(sb.toString());
        }
        String res = ls.get(0);
        for(int i=0;i<ls.size()-1;i++){
            res = addStrings(res,ls.get(i+1));
        }
        return res;
    }
    public String addStrings(String num1, String num2) {
        int carray = 0;
        StringBuilder sb = new StringBuilder();
        for(int i=num1.length()-1,j=num2.length()-1;i>=0||j>=0||carray>0;i--,j--){
            int n1 = i>=0?num1.charAt(i) - '0':0;//直接减 不用parseInt
            int n2 = j>=0?num2.charAt(j) - '0':0;
            int sum = n1+n2+carray;
            carray = sum/10;
            sb.append(sum%10); //不用转String
        }
        return sb.reverse().toString();
    }
}
