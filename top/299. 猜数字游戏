//mysolution
class Solution {
    public String getHint(String secret, String guess) {
        int bulls = 0, cows = 0;
        StringBuilder sb1 = new StringBuilder(secret);
        StringBuilder sb2 = new StringBuilder(guess);
        Map<Character,Integer> m = new HashMap<>();
        for(int i=0;i<sb1.length();i++){
            char c1 = sb1.charAt(i);
            char c2 = sb2.charAt(i);
            if(c1==c2){
                bulls++;
                sb1.deleteCharAt(i);
                sb2.deleteCharAt(i--);
            }
            else{
                m.put(c1,m.getOrDefault(c1,0)+1);
            }
        }
        for(int i=0;i<sb1.length();i++){
            char c = sb2.charAt(i);
            if(m.containsKey(c)&&m.get(c)!=0){
                cows++;
                m.put(c,m.get(c)-1);
            }
        }
        cows = cows;
        return new StringBuilder().append(bulls).append('A').append(cows).append('B').toString();
    }
}
//answer
//数组模拟map
class Solution {
    public String getHint(String secret, String guess) {
        int bulls = 0;
        int[] cntS = new int[10];
        int[] cntG = new int[10];
        for (int i = 0; i < secret.length(); ++i) {
            if (secret.charAt(i) == guess.charAt(i)) {
                ++bulls;
            } else {
                ++cntS[secret.charAt(i) - '0'];
                ++cntG[guess.charAt(i) - '0'];
            }
        }
        int cows = 0;
        for (int i = 0; i < 10; ++i) {
            cows += Math.min(cntS[i], cntG[i]);
        }
        return Integer.toString(bulls) + "A" + Integer.toString(cows) + "B";
    }
}
