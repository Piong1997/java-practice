class Solution {
    #dp
    public int fib(int n) {
        if(n==0) return 0;
        if(n==1) return 1;
        int[] dp = new int[n+1];
        dp[0] = 0;
        dp[1] = 1;
        for(int i=2;i<n+1;i++){
            dp[i] = (dp[i-1]+dp[i-2])%1000000007;
        }
        return dp[n];
    }
    #dp
    public int fib(int n) {
        if(n==0) return 0;
        if(n==1) return 1;
        int a = 0;
        int b = 1;
        int c = 1;
        for(int i=2;i<n+1;i++){
            c = (a+b)%1000000007;
            a = b;
            b = c;
        }
        return c;
    }
    #记忆化递归
    static int[] res = new int[101];
    public int fib(int n) {
        if(n==0) return 0;
        if(n==1) return 1;
        if(res[n]==0) 
            res[n] = (fib(n-1)+fib(n-2))%1000000007;
        return res[n];
    }
}
