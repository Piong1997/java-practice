//1143. 最长公共子序列
class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int m = text1.length(), n = text2.length();
        int[][] arr = new int[m+1][n+1];
        for(int i=1;i<m+1;i++){
            char c1 = text1.charAt(i - 1); //避免从内层循环取值
            for(int j=1;j<n+1;j++){
                if(c1==text2.charAt(j-1)){
                    arr[i][j] = arr[i-1][j-1]+1;
                }else{
                    arr[i][j] = Math.max(arr[i-1][j],arr[i][j-1]);
                }
            }
        }
        return arr[m][n];
    }
}
//718. 最长重复子数组
class Solution {
    public int findLength(int[] nums1, int[] nums2) {
        int[][] arr = new int[nums1.length+1][nums2.length+1];
        int res = 0;
        for(int i=1;i<nums1.length+1;i++){
            for(int j=1;j<nums2.length+1;j++){
                if(nums1[i-1]==nums2[j-1]){
                    arr[i][j] = arr[i-1][j-1]+1;
                    res = res>arr[i][j]?res:arr[i][j];
                }
            }
        }
        return res;
    }
}
