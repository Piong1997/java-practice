class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length, n = matrix[0].length;
        int x = 0, y = n - 1;
        while (x < m && y >= 0) {
            if (matrix[x][y] == target) {
                return true;
            }
            if (matrix[x][y] > target) {
                --y;
            } else {
                ++x;
            }
        }
        return false;
    }
}
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length;
        int[] tmp = new int[m];
        for(int i=0;i<m;i++){
            tmp[i] = matrix[i][0];
        }
        int row = Arrays.binarySearch(tmp,target);
        row = row>=0?row:-row-2;//binarySearch搜索不到时返回 -（插入下标+1），如[1,3,5]查找4返回-3
        row = row<0?0:row;
        int res = Arrays.binarySearch(matrix[row],target);
        return res>=0?true:false;
    }
}
